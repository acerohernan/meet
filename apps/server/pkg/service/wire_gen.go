// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package service

import (
	"github.com/acerohernan/meet/pkg/config"
	"github.com/acerohernan/meet/pkg/service/auth"
	"github.com/acerohernan/meet/pkg/service/router"
	"github.com/acerohernan/meet/pkg/service/storage"
	"github.com/acerohernan/meet/pkg/utils"
)

// Injectors from wire.go:

func InitializeServer(conf *config.Config) (*Server, error) {
	authService := auth.NewAuthService(conf)
	authMiddleware := auth.NewAuthMiddleware(authService)
	inMemoryStorage := getInMemoryStorage(conf)
	monitor, err := router.NewMonitor()
	if err != nil {
		return nil, err
	}
	routerRouter := router.NewRouter(conf, inMemoryStorage, monitor)
	roomService := NewRoomService(routerRouter)
	server := NewServer(conf, authMiddleware, roomService, routerRouter)
	return server, nil
}

// wire.go:

func getInMemoryStorage(conf *config.Config) storage.InMemoryStorage {
	rc := utils.CreateRedisClient(conf.Redis)

	if rc != nil {
		return storage.NewRedisStorage(rc)
	}

	return storage.NewLocalStorage()
}
